# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild]
steps:
# This step runs the unit tests on the app
- name: 'python:3.7-slim'
  id: Test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/hello-cloudbuild:$SHORT_SHA'
  - '.'

# Twistcli Scan before it is pushed to the registry
- name: 'gcr.io/twistlock-cto-partners/cloud-build-twistcli'
  args: ['/twistcli.sh','gcr.io/$PROJECT_ID/hello-cloudbuild:$SHORT_SHA']
  id: Scan
  env:
  - 'TL_CONSOLE_URL=$_TWISTLOCK_URL'
  - 'TL_USER=$_TWISTLOCK_USER'
  - 'VULN_THRESHOLD=$_VULNERABILITY_THRESHOLD'
  - 'COMP_THRESHOLD=$_COMPLIANCE_THRESHOLD'
  - 'PROJECT_NAME=$_PROJECT_NAME'
  secretEnv:
  - 'TL_PASS'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/hello-cloudbuild:$SHORT_SHA'
# [END cloudbuild]

# [START cloudbuild-trigger-cd]
# This step clones the cloud-summit-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud source repos clone cloud-summit-env && \
    cd cloud-summit-env && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > cloud-summit-env/kubernetes.yaml

# This step pushes the manifest back to cloud-summit-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd cloud-summit-env && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/hello-cloudbuild:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository hello-cloudbuild-app
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate


substitutions:
    _TWISTLOCK_URL: 'https://console-master-summit.andreas.lab.twistlock.com'
    _TWISTLOCK_USER: 'andreas'
    _VULNERABILITY_THRESHOLD: 'critical'
    _COMPLIANCE_THRESHOLD: 'critical'
    _PROJECT_NAME: 'google'

images:
- 'gcr.io/$PROJECT_ID/hello-cloudbuild:$SHORT_SHA'

secrets:
- kmsKeyName: projects/twistlock-cto-partners/locations/global/keyRings/andreas/cryptoKeys/PASSWORD
  secretEnv:
    TL_PASS: CiQAoj7+k2decZfUMvQb3LZJrFZbf9sTE085j1n4mLDy1UJ9P/ASMwBEoFofR09RO9nx/BXpbcyPMVSU4+yLcfJwKM5pqGjklA3qJ+NpgBCndDa5nkCMVrcJAw==

# [END cloudbuild-trigger-cd]
